name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  # schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

jobs:
  pre_ci:
    uses: dtolnay/.github/.github/workflows/pre_ci.yml@master

  bazel:
    name: Bazel on ${{matrix.os == 'ubuntu' && 'Linux' || matrix.os == 'macos' && 'macOS' || matrix.os == 'windows' && 'Windows' || '???'}}
    runs-on: ${{matrix.os}}-latest
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install lld
        run: sudo apt-get install lld
        if: matrix.os == 'ubuntu'
      - name: Set bazelrc for Windows
        run: echo "startup --output_user_root=D:/bzl" > user.bazelrc
        if: matrix.os == 'windows'
      - run: bazel --version
      - run: bazel run demo --verbose_failures --noshow_progress ${{matrix.os == 'macos' && '--xcode_version_config=tools/bazel:github_actions_xcodes' || ''}}
      - run: bazel test ... --verbose_failures --noshow_progress ${{matrix.os == 'macos' && '--xcode_version_config=tools/bazel:github_actions_xcodes' || ''}}
      - name: Check MODULE.bazel.lock up to date
        run: git diff --exit-code
      - run: bazel run //third-party:vendor
        if: matrix.os == 'ubuntu'
      - name: Check third-party/bazel up to date
        run: git diff --exit-code
        if: matrix.os == 'ubuntu'

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get install lld
      - run: bazel build --config=clippy ... --verbose_failures --noshow_progress

  clang-tidy:
    name: Clang Tidy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install clang-tidy
        run: sudo apt-get install clang-tidy-18
      - name: Run clang-tidy
        run: clang-tidy-18 src/cxx.cc --warnings-as-errors=*

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - run: npm install
        working-directory: book
      - run: npx eslint
        working-directory: book
